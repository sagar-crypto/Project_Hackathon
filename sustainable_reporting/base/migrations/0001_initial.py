# Generated by Django 4.2.7 on 2024-05-24 14:20

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Certificate",
            fields=[
                ("certificate_id", models.AutoField(primary_key=True, serialize=False)),
                ("certificate_name", models.CharField(max_length=255)),
                ("certificate_url", models.CharField(max_length=255, null=True)),
                ("issued_by", models.CharField(max_length=255)),
                ("valid_until", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="Suplier",
            fields=[
                ("supplier_id", models.AutoField(primary_key=True, serialize=False)),
                ("supplier_name", models.CharField(max_length=255)),
                ("country", models.CharField(max_length=255)),
                ("contact_name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="SupplyChain",
            fields=[
                (
                    "supply_chain_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("from_location", models.CharField(max_length=255)),
                ("to_location", models.CharField(max_length=255)),
                ("transport_mode", models.CharField(max_length=255)),
                ("carbon_emissions", models.IntegerField()),
                (
                    "supplier_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.suplier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Shipment",
            fields=[
                ("shipment_id", models.AutoField(primary_key=True, serialize=False)),
                ("product_name", models.CharField(max_length=255)),
                ("product_category", models.CharField(max_length=255)),
                ("price", models.IntegerField()),
                ("units_in_stock", models.IntegerField()),
                ("country_of_production", models.CharField(max_length=255)),
                ("DOP_manufacture", models.DateTimeField()),
                ("geolocation", models.CharField(max_length=255)),
                ("transport_mode", models.CharField(max_length=255)),
                ("carbon_emissions", models.IntegerField()),
                ("start_location", models.CharField(max_length=255)),
                ("destination_location", models.CharField(max_length=255)),
                ("proof_certificate_1", models.IntegerField()),
                ("proof_certificate_2", models.IntegerField()),
                ("self_confirmation", models.CharField(max_length=255)),
                ("signature", models.CharField(max_length=255)),
                ("designation", models.CharField(max_length=255)),
                ("form_submited_date", models.DateTimeField()),
                (
                    "certificate_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.certificate",
                    ),
                ),
                (
                    "supplier_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.suplier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RiskAssessment",
            fields=[
                (
                    "risk_assessment_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("risk_level", models.CharField(max_length=255)),
                ("assessment_date", models.CharField(max_length=255)),
                ("assessor", models.CharField(max_length=255)),
                ("comments", models.TextField()),
                (
                    "supplier_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.suplier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Compliance",
            fields=[
                ("compliance_id", models.AutoField(primary_key=True, serialize=False)),
                ("compliance_date", models.DateTimeField()),
                (
                    "certificate_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.certificate",
                    ),
                ),
                (
                    "shipment_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.shipment",
                    ),
                ),
                (
                    "supplier_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.suplier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[("admin", "Admin"), ("supplier", "Supplier")],
                        default="supplier",
                        max_length=10,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("username", models.CharField(max_length=150, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "custom_user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
